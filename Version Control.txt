Version control is, to me, all about the practice of organizing and separating different regions of a project in order to keep simultaneous tasks from interfering with each other, and to make it simple to revert a change that had unforeseen consequences. This can take different forms, Git being a common one, and requires a little bit of overhead work to maintain, but it's absolutely worth it. The ability to pull current code, make your changes, then submit those changes for approval and merging back into the main branch can save a tremendous amount of time in the long run.

In my experience as a software quality analyst, the difference version control can make is massive. Having worked for a company with no version control, I've found myself stalling for days or weeks, tracking down each individual task, fix, and support ticket being worked on for a client, trying to figure out which one broke when we tried to update production code, and is now hampering our ability to make any updates until it's either completed or removed. It's one of the most frustrating experiences of my professional life... And it's happened multiple times. 